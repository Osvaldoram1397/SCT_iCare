@using PagedList.Mvc;
@model PagedList.IPagedList<SCT_iCare.SkeedaPK>

@{
    ViewBag.Title = "Index";

    string doctor = "";
    string statusConekta = "";
    string statusSkeeda = "";

    conekta.Order conekta = new conekta.Order();

    SCTiCareEntities1 db = new SCTiCareEntities1();

    var skeeda = from s in db.SkeedaPK orderby s.Created descending select s;
    var conektaOrden = from c in db.ConektaPK orderby c.fecha_creacion select c;

    string etiqueta = "";

    int pagadasSkeeda = (from skee in skeeda where skee.Payment_status == "Paid" select skee.Payment_status).Count();
    int pagadasConekta = (from conek in conektaOrden where conek.estatus == "paid" select conek.estatus).Count();
    int pendientesConekta = (from conek in conektaOrden where conek.estatus == "pending_payment" select conek.estatus).Count();
    int banco = (from b in skeeda select b).Where(oh => oh.TipoPago__Custom_field_5_.Contains("oxxo")).Count();

}

@*<h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

<br />
<br />

<button type="button" class="btn btn-outline-warning boton-transparenteExcel botonesGral"><span class="glyphicon glyphicon-ok"></span> Pagadas Skeeda: <b>@pagadasSkeeda</b></button>
<button type="button" class="btn btn-outline-warning boton-transparenteExcel botonesGral"><span class="glyphicon glyphicon-ok"></span> Pagadas Conekta: <b>@pagadasConekta</b></button>
<button type="button" class="btn btn-outline-warning boton-transparentePendiente botonesGral"><span class="glyphicon glyphicon-time"></span> Pendientes Conekta: <b>@pendientesConekta</b></button>
<button type="button" class="btn btn-outline-warning boton-transparenteAzul botonesGral"><span class="glyphicon glyphicon-search"></span> Pago OXXO: <b>@banco</b></button>

<br />
<br />



<div class="tablaScroll">
    <table class="table tablas table-hover" style="color: #2F2D6B">
        <thead>
            <tr style="background-color:#62E3C9">
                <th>
                    Fecha de Orden
                </th>
                <th>
                    Fecha Checkup
                </th>
                <th>
                    Concepto CheckUp
                </th>
                <th>
                    Doctor
                </th>
                <th>
                    Paciente
                </th>
                <th>
                    Estatus Skedda
                </th>
                <th>
                    Estatus Conekta
                </th>

                <th>
                    Tipo de Pago
                </th>
                <th>
                    Referencia
                </th>
                <th>
                    No. Orden
                </th>
                <th>
                    Chequeo Realizado
                </th>

                <th>Acciones</th>
            </tr>
        </thead>


        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Scheduled_start)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Spaces)
                </td>
                @{
                    if (item.DrVeracruz__Custom_field_21_ != null)
                    {
                        doctor = item.DrVeracruz__Custom_field_21_;
                    }
                    else if (item.DrSatelite__Custom_field_22_ != null)
                    {
                        doctor = item.DrSatelite__Custom_field_22_;
                    }
                    else if (item.DrLindavis__Custom_field_23_ != null)
                    {
                        doctor = item.DrLindavis__Custom_field_23_;
                    }
                }

                <td>
                    @doctor
                </td>
                <td>
                    <b>@Html.DisplayFor(modelItem => item.Title)</b>
                </td>

                @{
                    if (item.Payment_status == "Paid")
                    {
                        statusSkeeda = "Pagado";
                        etiqueta = "#41F51A";
                    }
                    else if (item.Payment_status == "Unpaid")
                    {
                        statusSkeeda = "NoPagado";
                        etiqueta = "#FF5056";
                    }
                    else if (item.Payment_status == "NoStatus")
                    {
                        statusSkeeda = "Sin Estatus";
                        etiqueta = "white";
                    }
                    else
                    {
                        statusSkeeda = "";
                        etiqueta = "white";
                    }
                }

                <td>
                    <b><mark style="background-color:@etiqueta">@statusSkeeda</mark></b>
                </td>

                @{
                    SCT_iCare.Controllers.Recepcion.SolicitudesConektaController apikey = new SCT_iCare.Controllers.Recepcion.SolicitudesConektaController();

                    if (item.Ord_Num__Custom_field_7_ != null)
                    {
                        //var orden = new conekta.Order().find(item.Ord_Num__Custom_field_7_);
                        var match = (from m in conektaOrden where m.id_orden == item.Ord_Num__Custom_field_7_ select m).FirstOrDefault();

                        if (match == null)
                        {
                            statusConekta = "No existe";
                            etiqueta = "white";
                        }
                        else
                        {
                            string matchStatus = match.estatus.ToString();

                            if (matchStatus == "pending_payment")
                            {
                                statusConekta = "Pendiente";
                                etiqueta = "#FFFA4F";
                            }
                            else if (matchStatus == "paid")
                            {
                                statusConekta = "Pagado";
                                etiqueta = "#41F51A";
                            }
                            else if (matchStatus == "expired")
                            {
                                statusConekta = "Expirado";
                                etiqueta = "#41F51A";
                            }
                            else
                            {
                                statusConekta = "";
                                etiqueta = "white";
                            }
                        }
                    }
                    else
                    {
                        statusConekta = "";
                        etiqueta = "white";
                    }



                }

                <td>
                    <b><mark style="background-color:@etiqueta">@statusConekta</mark></b>
                </td>
                
                <td>
                    <b style="color:#FBB328">@Html.DisplayFor(modelItem => item.TipoPago__Custom_field_5_)</b>
                </td>
                <td>
                    <b>@Html.DisplayFor(modelItem => item.RefPagoOxx__Custom_field_6_)</b>
                </td>
                <td>
                    <b>@Html.DisplayFor(modelItem => item.Ord_Num__Custom_field_7_)</b>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CheckCita__Custom_field_20_)
                </td>

                
                <td>
                        @Html.ActionLink("Editar", "Edit", new { id = item.idSkeeda }) 
                        @*@Html.ActionLink("Details", "Details", new { id = item.idSkeeda }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.idSkeeda })*@
                    </td>
            </tr>
        }
    </table>
</div>

<br />
@using (Html.BeginForm("Index", "SkeedaPK", FormMethod.Post))
{
    <p>
        <h5 class="labelGral">
            Mostrando: <select name="PageSize" id="PageSize" onchange = "this.form.submit();">
    <option @if ((int)ViewBag.PageSize == 10) { @Html.Raw("selected") } value="10">10</option>
    <option @if ((int)ViewBag.PageSize == 20) { @Html.Raw("selected") } value="20">20</option>
    <option @if ((int)ViewBag.PageSize == 50) { @Html.Raw("selected") } value="50">50</option>
    <option @if ((int)ViewBag.PageSize == 100) { @Html.Raw("selected") } value="100">100</option>
</select> registros
        </h5>
    </p>
}

<h5 class="labelGral">Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount. Elementos totales: @Model.TotalItemCount</h5>

@Html.PagedListPager(Model, page => Url.Action("Index", "SkeedaPK", new { page, pageSize = ViewBag.PageSize }))




