@using PagedList.Mvc;
@model PagedList.IPagedList<SCT_iCare.Cita>

@{
    ViewBag.Title = "Captura";

    SCTiCareEntities1 db = new SCTiCareEntities1();

    DateTime start = DateTime.Now;
    //DateTime startDay = Convert.ToDateTime(start.Day);

    var oUser = (Usuarios)HttpContext.Current.Session["User"];

    string nombreUsuario = null;
    int idUser = 0;

    if (oUser != null)
    {
        idUser = oUser.idUsuario;
        nombreUsuario = oUser.Nombre;
    }

    string Query = "";
    if(TempData["ERROR"] == "ESTE EXPEDIENTE YA HA SIDO TOMADO POR OTRO USUARIO")
    {
        Query = TempData["ERROR"].ToString();
    }



    string parameter = ViewBag.Parameter;
    DateTime rango = Convert.ToDateTime(ViewBag.Fecha);


    int year = start.Year;
    int month = start.Month;
    int day = start.Day;
    int tomorrorDay = day + 1;
    DateTime thisDate = new DateTime(year, month, day);
    DateTime tomorrowDate = DateTime.Now.AddDays(1);


    //var repoCentral = (from r in db.EPI orderby r.TipoEPI select r).Select(i => new { i.Capturista, i.Dictamen, i.Doctor, i.Estatus, i.FechaExpediente, i.FinalCaptura, i.idEPI, i.InicioCaptura, i.NoFolio, i.NombrePaciente, i.Sucursal, i.TipoEPI, i.Usuario }).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).ToList();
    var repoCentral = (from r in db.Captura select r).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).ToList(); ;

    int epis = (from e in db.Captura select e).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).Count();

    int dictamenes = (from e in db.Captura select e).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate && w.EstatusCaptura == "Terminado").Count();

    int pendientes = (from e in db.Captura select e).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate && w.EstatusCaptura == "No iniciado").Count();

    int enCaptura = (from e in db.Captura select e).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate && w.EstatusCaptura == "En captura...").Count();

    int incidencia = (from e in db.Captura select e).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate && w.EstatusCaptura == "Pendiente").Count();

    var sucursalesLista = from s in db.Sucursales select s.Nombre;

    var capturistas = from c in db.Usuarios where c.idRol == 7 && c.idUsuario != 11 select c.Nombre;

    string fecha = DateTime.Now.ToString("dd-MMMM-yyyy");

    string fila = "";

}

<br />
<br />
@*<h5 style="color:white" class="text-right">@fecha</h5>*@
<h3 style="color:white" class="text-center">EPI Center &nbsp; &nbsp; &nbsp;<span class="h4" style="color:#AC9070"><b>@fecha</b></span></h3>
<br />
@*<script>setTimeout('document.location.reload()', 10000);</script>*@
@{
    int episProgeso = (from e in db.Captura select e).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).Count();
    int dictamenesProgreso = (from e in db.Captura select e).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate && w.EstatusCaptura == "Terminado").Count();

    int porcentaje;

    if (episProgeso == 0)
    {
        porcentaje = 0;
    }
    else
    {
        porcentaje = (dictamenesProgreso * 100) / episProgeso;
    }

    string progreso = "Progreso:";

    if (porcentaje == 0)
    {
        progreso = "Comenzamos el día. Vamos a capturar esos EPIs!";
    }
    else if (porcentaje > 0 && porcentaje < 10)
    {
        progreso = "Vamos bien. Echémosle galleta!";
    }
    else if (porcentaje >= 10 && porcentaje < 45)
    {
        progreso = "Uff. Si le echamos montón vamos a terminar rápido";
    }
    else if (porcentaje >= 45 && porcentaje < 55)
    {
        progreso = "Estamos a la mitad del camino";
    }
    else if (porcentaje >= 55 && porcentaje < 75)
    {
        progreso = "Ya estamos más para acá que para allá!";
    }
    else if (porcentaje >= 75 && porcentaje < 95)
    {
        progreso = "Unos cuantos más y lo logramos!!";
    }
    else if (porcentaje >= 95 && porcentaje < 100)
    {
        progreso = "SI SE PUEDE!! SI SE PUEDE!!";
    }
    else if (porcentaje == 100)
    {
        progreso = "LO LOGRAMOS!!!!";
    }


    <h4 style="color:chartreuse">@progreso</h4>
    <div class="progress">
        <div class="progress-bar bg-warning" role="progressbar" style="width: @porcentaje%; background-color:#57D94E" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">@porcentaje%</div>
    </div>

    <br />
}


@{ if (idUser == 11 || idUser == 15)
    {

        @*<p class="col-md-4">
                <button type="button" class="btn btn-outline-warning boton-transparenteIndicadorAm botonesGral" data-toggle="collapse" data-target="#collapseExample1" aria-expanded="false" aria-controls="collapseExample1"><h4><span class="glyphicon glyphicon-duplicate"></span> &nbsp; &nbsp;EPIs Existentes: <b>@epis</b></h4></button>
            </p>
            <div class="collapse col-md-4" id="collapseExample1">
                <div class="card card-body  col-md-4" style="padding:20px; width:40%; min-width:400px; border-radius: 10px; background-color: white">
                    @{
                        foreach (var item in sucursalesLista)
                        {
                            var elemento = (from v in db.EPI where v.Sucursal == item select v).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).Count();
                            <h4><b>@item:</b> @elemento</h4>
                        }
                    }
                </div>
                <hr />
            </div>*@

        <div class="container">

            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-warning boton-transparenteIndicadorAm botonesGral col-md-4" data-toggle="modal" data-target="#exampleModal1" style="color:white">
                <h4><span class="glyphicon glyphicon-duplicate"></span> &nbsp; &nbsp;EPIs TOTALES: <b>@epis</b></h4>
            </button>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:gold">
                            <h3 class="modal-title" id="exampleModalLabel"><span class="glyphicon glyphicon-duplicate"></span> &nbsp; &nbsp;EPIs Existentes: <b>@epis</b></h3>
                        </div>
                        <div class="modal-body">
                            @{
                                foreach (var item in sucursalesLista)
                                {
                                    var elemento = (from v in db.Captura where v.Sucursal == item select v).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).Count();
                                    <h4><b>@item:</b> @elemento</h4>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-warning boton-transparenteIndicadorAz botonesGral col-md-4" data-toggle="modal" data-target="#exampleModal2" style="color:white">
                <h4><span class="glyphicon glyphicon-ok"></span> &nbsp; &nbsp;Dictámenes Generados: <b>@dictamenes</b></h4>
            </button>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal2" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:aquamarine">
                            <h3 class="modal-title" id="exampleModalLabel"><span class="glyphicon glyphicon-ok"></span> &nbsp; &nbsp;Dictámenes Generados: <b>@dictamenes</b></h3>
                        </div>
                        <div class="modal-body">
                            @{
                                foreach (var item in sucursalesLista)
                                {
                                    var elemento = (from v in db.Captura where v.Sucursal == item && v.EstatusCaptura == "Terminado" && v.FechaExpediente >= thisDate && v.FechaExpediente < tomorrowDate select v).Count();
                                    <h4><b>@item:</b> @elemento</h4>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-warning boton-transparenteIndicadorRo botonesGral col-md-4" data-toggle="modal" data-target="#exampleModal3" style="color:white">
                <h4><span class="glyphicon glyphicon-time"></span> &nbsp; &nbsp;EPIs NO Iniciados: <b>@pendientes</b></h4>
            </button>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal3" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:orangered">
                            <h3 class="modal-title" id="exampleModalLabel"><span class="glyphicon glyphicon-duplicate"></span> &nbsp; &nbsp;EPIs NO Iniciados: <b>@pendientes</b></h3>
                        </div>
                        <div class="modal-body">
                            @{
                                foreach (var item in sucursalesLista)
                                {
                                    var elemento = (from v in db.Captura where v.Sucursal == item && v.EstatusCaptura == "No iniciado" && v.FechaExpediente >= thisDate && v.FechaExpediente < tomorrowDate select v).Count();
                                    <h4><b>@item:</b> @elemento</h4>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-warning boton-transparenteIndicadorAm botonesGral col-md-4" data-toggle="modal" data-target="#exampleModal4" style="color:white">
                <h4><span class="glyphicon glyphicon-duplicate"></span> &nbsp; &nbsp;EPIs en Captura: <b>@enCaptura</b></h4>
            </button>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal4" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:gold">
                            <h3 class="modal-title" id="exampleModalLabel"><span class="glyphicon glyphicon-duplicate"></span> &nbsp; &nbsp;EPIs en Captura: <b>@enCaptura</b></h3>
                        </div>
                        <div class="modal-body">
                            @{
                                foreach (var item in sucursalesLista)
                                {
                                    var elemento = (from v in db.Captura where v.Sucursal == item select v).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate && w.EstatusCaptura == "En captura...").Count();
                                    <h4><b>@item:</b> @elemento</h4>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-warning boton-transparenteIndicadorAz botonesGral col-md-4" data-toggle="modal" data-target="#exampleModal5" style="color:white">
                <h4><span class="glyphicon glyphicon-user"></span> &nbsp; &nbsp;Dictámenes por Capturista</h4>
            </button>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal5" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:aquamarine">
                            <h3 class="modal-title" id="exampleModalLabel"><span class="glyphicon glyphicon-user"></span> &nbsp; &nbsp;Dictámenes por Capturista</h3>
                        </div>
                        <div class="modal-body">
                            @{
                                foreach (var item in capturistas)
                                {
                                    var elemento = (from v in db.Captura where v.EstatusCaptura == "Terminado" && v.FechaExpediente >= thisDate && v.FechaExpediente < tomorrowDate && v.Capturista == item select v).Count();
                                    <h4><b>@item:</b> @elemento</h4>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-warning boton-transparenteIndicadorRo botonesGral col-md-4" data-toggle="modal" data-target="#exampleModal6" style="color:white">
                <h4><span class="glyphicon glyphicon-alert"></span> &nbsp; &nbsp;Pendientes por Dictaminar: <b>@incidencia</b></h4>
            </button>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal6" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:orange">
                            <h3 class="modal-title" id="exampleModalLabel"><span class="glyphicon glyphicon-alert"></span> &nbsp; &nbsp;Pendientes por Dictaminar: <b>@incidencia</b></h3>
                        </div>
                        <div class="modal-body">
                            @{
                                foreach (var item in sucursalesLista)
                                {
                                    var elemento = (from v in db.Captura where v.Sucursal == item && v.EstatusCaptura == "Pendiente" select v).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).Count();
                                    <h4><b>@item:</b> @elemento</h4>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <br />


        @*<div id="contenedor_carga" style="background-color:white">
                <div id="carga" >
                </div>
            </div>

            <script>
                window.onload = function () {
                    var contenedor = document.getElementById('contenedor_carga');

                    contenedor.style.visibility = 'hidden';
                    contenedor.style.opacity = '0';
                }
            </script>*@
    }
    else
    {
        <div class="container">
            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-warning boton-transparenteIndicadorAm botonesGral col-md-4" data-toggle="modal" data-target="#exampleModal4" style="color:white">
                <h4><span class="glyphicon glyphicon-duplicate"></span> &nbsp; &nbsp;EPIs en Captura: <b>@enCaptura</b></h4>
            </button>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal4" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:gold">
                            <h3 class="modal-title" id="exampleModalLabel"><span class="glyphicon glyphicon-duplicate"></span> &nbsp; &nbsp;EPIs en Captura: <b>@enCaptura</b></h3>
                        </div>
                        <div class="modal-body">
                            @{
                                foreach (var item in sucursalesLista)
                                {
                                    var elemento = (from v in db.Captura where v.Sucursal == item select v).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate && w.EstatusCaptura == "En captura...").Count();
                                    <h4><b>@item:</b> @elemento</h4>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Button trigger modal -->
            <button type="button" class="btn btn-outline-warning boton-transparenteIndicadorRo botonesGral col-md-4" data-toggle="modal" data-target="#exampleModal6" style="color:white">
                <h4><span class="glyphicon glyphicon-alert"></span> &nbsp; &nbsp;Pendientes por Dictaminar: <b>@incidencia</b></h4>
            </button>

            <!-- Modal -->
            <div class="modal fade" id="exampleModal6" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header" style="background-color:orange">
                            <h3 class="modal-title" id="exampleModalLabel"><span class="glyphicon glyphicon-alert"></span> &nbsp; &nbsp;Pendientes por Dictaminar: <b>@incidencia</b></h3>
                        </div>
                        <div class="modal-body">
                            @{
                                foreach (var item in sucursalesLista)
                                {
                                    var elemento = (from v in db.Captura where v.Sucursal == item && v.EstatusCaptura == "Pendiente" select v).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).Count();
                                    <h4><b>@item:</b> @elemento</h4>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <br />

    }


}

<h4 style="color:white" class="text-center">Sucursales</h4>
<center>
    @{
        var sucursales = from s in db.Sucursales select s;
        string sucursal = null;

        foreach (var item in sucursales)
        {
            sucursal = item.Nombre;
            <a href=@Url.Action("capturaSucursal", "EPIs", new { sucursal = sucursal })><button style="color:white" type="button" class="btn btn-outline-warning boton-transparenteExcel botonesGral"><span class="glyphicon glyphicon-folder-open"></span> &nbsp; &nbsp;@item.Nombre</button></a>

        }
        if (idUser == 11 || idUser == 16)
        {
            <a href=@Url.Action("CentroControl", "EPIs")><button style="color:white" type="button" class="btn btn-outline-warning boton-transparenteAzul botonesGral"><span class="glyphicon glyphicon-th-list"></span> &nbsp; &nbsp;CENTRO DE CONTROL</button></a>
        }
    }
</center>
<br />
<br />

@*<h4 style="color:white" class="text-center">Repositorio Central</h4>

    <button type="button" onclick="Obtener();">Ejemplo</button>
    <button type="button" onclick="ObtenerG();">Ejemplo2</button>
    <input type="button" onchange="Obtener2();" />

        <script>
            function Obtener() {
                fetch("@Url.Content("~/EPIs/EjemploJSON")")
                    .then(function (res) {
                        return res.json();
                    })
                    .then(function (miJson) {
                        console.log(miJson);
                        let miResultado = "";
                        for (let i = 0; i < miJson.length; i++) {
                            if (i == 0) {
                                miResultado = "<tr style=\"background-color:#62E3C9\"><th>Nombre Paciente</th><th>No Expediente</th></tr>"
                            }
                            else {
                                miResultado += "<tr style=\"backgroud-color:white\"><td>" + miJson[i].Nombre + "</td> <td>" + miJson[i].Referencia + "</td></tr>"
                            }

                        }

                        document.getElementById("tablaEjemplo").innerHTML = miResultado;
                    })
            }
        </script>

        <script>
            function ObtenerG() {
                fetch("@Url.Content("~/EPIs/General")")
                    .then(function (res) {
                        return res.json();
                    })
                    .then(function (miJson) {
                        console.log(miJson);
                        let miResultado = "";
                        for (let i = 0; i < miJson.length; i++) {
                            if (i == 0) {
                                miResultado = "<tr style=\"background-color:#62E3C9\"><th>Nombre Paciente</th><th>Teléfono</th></tr>"
                            }
                            else {
                                miResultado += "<tr style=\"backgroud-color:white\"><td>" + miJson[i].Nombre + "</td> <td>" + miJson[i].Telefono + "</td></tr>"
                            }

                        }

                        document.getElementById("tablaEjemplo").innerHTML = miResultado;
                    })
            }
        </script>

        <script>
            function Obtener2() {
                fetch("@Url.Action("~/EPIs/Actuales")", "ANTONIO")
                    .then(function (res) {
                        return res.json();
                    })
                    .then(function (miJson) {
                        console.log(miJson);
                        let miResultado = "";
                        for (let i = 0; i < miJson.length; i++) {
                            if (i == 0) {
                                miResultado = "<tr style=\"background-color:#62E3C9\"><th>Nombre Paciente</th><th>Teléfono</th></tr>"
                            }
                            else {
                                miResultado += "<tr style=\"backgroud-color:white\"><td>" + miJson[i].Nombre + "</td> <td>" + miJson[i].Telefono + "</td></tr>"
                            }

                        }

                        document.getElementById("tablaEjemplo").innerHTML = miResultado;
                    })
            }
        </script>*@


<!--<nav class="navbar navbar-light bg-light">
    <form class="form-inline col-md-10" action="@Url.Content("~/EPIs/Captura")" method="post">
        @Html.AntiForgeryToken()
        <input class="form-control mr-sm-2" id="parameter" name="parameter" type="search" placeholder="Paciente o Expediente" aria-label="Search" style="display:inline-block" required>
        <input class="btn btn-info my-2 my-sm-0" type="submit" style="display:inline-block" value="Buscar">-->
@*<b><span class="glyphicon glyphicon-search"></span></b></input>*@
<!--</form>
    <form class="form-inline container" action="@Url.Content("~/EPIs/Captura")" method="post">
        <input type="date" class="form-control col-md-2" id="fecha" name="nacimiento">
    </form>
</nav>-->


@{
    if (ViewBag.Parameter == "")
    {
        var repo = (from r in db.Captura orderby r.TipoTramite select r).Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).ToList();
        repoCentral = repo;
    }
    else
    {
        var repo = (from r in db.Captura
                    where
                    r.NombrePaciente.Contains(parameter) ||
                    r.EstatusCaptura.Contains(parameter) ||
                    r.NoExpediente.Contains(parameter) ||
                    r.TipoTramite.Contains(parameter) ||
                    r.Doctor.Contains(parameter) ||
                    r.Sucursal.Contains(parameter) ||
                    r.Capturista.Contains(parameter) ||
                    r.Capturista.Contains(parameter)
                    orderby r.TipoTramite
                    select r)
                    .Where(w => w.FechaExpediente >= thisDate && w.FechaExpediente < tomorrowDate).ToList();
        repoCentral = repo;
    }
}


@using (Html.BeginForm("EditExpediente", "EPIs"))
{
    @Html.AntiForgeryToken()

    if (epis != 0)
    {
        <div class="tablaScroll">
        <table class="table tablas table-responsive" id="tablaEjemplo" style="color: #2F2D6B">
            <tr style="background-color:#62E3C9">
                <th>
                    Nombre Paciente
                </th>

                <th>
                    NoExpediente
                </th>
                <th>
                    Tipo de Trámite
                </th>
                <th>
                    Estatus
                </th>
                <th>
                    Inicio Captura
                </th>
                <th>
                    Final Captura
                </th>
                <th>
                    Doctor Dictaminador
                </th>
                <th>
                    Sucursal
                </th>
                <th>
                    Capturista
                </th>
                <th>Acciones</th>
            </tr>

            @foreach (var item in repoCentral)
            {

                if (item.TipoTramite == "PRIMERA VEZ")
                {
                    fila = "bg-warning";
                }
                else
                {
                    fila = "bg-default";
                }


                <tr class=@fila>
                    <td>
                        <b>@Html.DisplayFor(modelItem => item.NombrePaciente)</b>
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.NoExpediente)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TipoTramite)
                    </td>
                    <td>
                        <b><i>@Html.DisplayFor(modelItem => item.EstatusCaptura)</i></b>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.InicioCaptura)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FinalCaptura)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Doctor)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Sucursal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Capturista)
                    </td>
                    <td>
                        @{
                            if (item.EstatusCaptura == "No iniciado")
                            {
                                @*<input type="submit" value="Capturar" class="btn btn-outline-warning boton-transparente botonesGral" />*@
                                @*@Html.ActionLink("Capturar", "EditExpediente", new { id = item.idEPI })*@
                                <a href=@Url.Action("EditExpedienteEC", "EPIs", new { id = item.idCaptura, usuario = nombreUsuario }) @*target="_blank" onclick="location.href = 'capturaSucursal?sucursal=@Sucursal';"*@ @*onclick="window.location.reload();"*@ @*onsubmit="location.reload()"*@><button type="button" class="btn btn-info">Capturar</button></a>
                            }
                            else if (item.EstatusCaptura == "En captura...")
                            {
                                <div class="btn-group">
                                    @*<a href=@Url.Action("SubirDictamen", "EPIs", new { id = item.idCaptura})><button type="button" class="btn btn-warning">Dictaminar</button></a>*@
                                    <button type="button" class="btn btn-info dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        Acciones <span class="glyphicon glyphicon-triangle-bottom"></span>
                                    </button>

                                    <div class="dropdown-menu" style="padding:10px">
                                        <b>@Html.ActionLink("Abrir EPI", "AbrirEPIGeneral", new { id = item.idCaptura })</b>
                                        <div class="dropdown-divider"></div>
                                        <b>@Html.ActionLink("Dictaminar", "SubirDictamen", new { id = item.idCaptura })</b>
                                        <div class="dropdown-divider"></div>
                                    </div>
                                </div>

                            }
                            else if (item.EstatusCaptura == "Terminado")
                            {
                                <a href=@Url.Action("DescargarPDF", "EPIs", new { id = item.idCaptura })><button type="button" class="btn btn-danger">Descargar</button></a>
                            }

                        }
                    </td>
                </tr>

            }

        </table>
            </div>

        using (Html.BeginForm("Captura", "EPIs", FormMethod.Post))
        {
            <p>
                <h5 class="labelGral">
                    Mostrando: <select name="PageSize" id="PageSize" onchange="this.form.submit();">
                        <option @if ((int)ViewBag.PageSize == 10) { @Html.Raw("selected") } value="10">10</option>
                        <option @if ((int)ViewBag.PageSize == 20) { @Html.Raw("selected") } value="20">20</option>
                        <option @if ((int)ViewBag.PageSize == 50) { @Html.Raw("selected") } value="50">50</option>
                        <option @if ((int)ViewBag.PageSize == 100) { @Html.Raw("selected") } value="100">100</option>
                    </select> registros
                </h5>
            </p>
        }

        <h5 class="labelGral">Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount. Elementos totales: @Model.TotalItemCount</h5>

        @Html.PagedListPager(Model, page => Url.Action("Captura", "EPIs", new { page, pageSize = ViewBag.PageSize }))
    }
    else
    {
        <h1 class="text-center" style="color:white">No existen EPIs digitalizados el día de hoy!!</h1>
    }


}

@section scripts{
@if(TempData["ID"] != null)
    {
        <script>
            @*location.href='@Url.Action("AbrirEPI","EPIs", new { id = TempData["ID"] })';*@
            window.open('@Url.Action("AbrirEPI","EPIs", new { id = TempData["ID"] })');
        </script>
    }

@if(Query == "ESTE EXPEDIENTE YA HA SIDO TOMADO POR OTRO USUARIO")
    {
        <script>
            alert("ESTE EXPEDIENTE YA HA SIDO TOMADO POR OTRO USUARIO");
        </script>
    }

}


<table class="table tablas table-responsive" id="tablaEjemplo" style="color: #2F2D6B">
</table>

