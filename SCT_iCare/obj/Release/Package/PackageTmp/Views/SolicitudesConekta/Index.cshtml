@model IEnumerable<conekta.Order>

@{
    ViewBag.Title = "Index";

    var oUser = (Usuarios)HttpContext.Current.Session["User"];
    int idUser = oUser.idUsuario;

    SCTiCareEntities1 db = new SCTiCareEntities1();

    conekta.Charge ch = new conekta.Charge();
    System.Web.Script.Serialization.JavaScriptSerializer js = new System.Web.Script.Serialization.JavaScriptSerializer();

    var Doctor = (from r in db.Consultorios where r.idUsuario == idUser select r.NombreDoctor).FirstOrDefault();
    var Consultorio = (from r in db.Consultorios where r.idUsuario == idUser select r.Consultorio).FirstOrDefault();

    string doctor = Doctor;
    string consultorio = Consultorio;

    //Newtonsoft.Json.Linq.JObject jsonLinq = new Newtonsoft.Json.Linq.JObject();

    var checkouts = new conekta.Models.Checkout().where(new Newtonsoft.Json.Linq.JObject());

    int i = 0;
    int j = 0;

}

<br />

<h4 style="color:#AC9070">Recepción <span style="color:white">@consultorio</span> </h4>
<h5 style="color:#AC9070">Doctor: <span style="color:white">@doctor</span> </h5>
<br />
<a href="#"><button type="button" class="btn btn-outline-warning boton-transparente botonesGral"><span class="glyphicon glyphicon-plus"></span> Venta en Sitio</button></a>
<a href="~/OrdenConekta/Asignadas"><button type="button" class="btn btn-outline-warning boton-transparente botonesGral"><span class="glyphicon glyphicon-ok"></span> Órdenes asignadas</button></a>
<a href="~/OrdenConekta/Pendiente"><button type="button" class="btn btn-outline-warning boton-transparente botonesGral"><span class="glyphicon glyphicon-time"></span> Órdenes para asignación</button></a>
<a href="~/OrdenConekta/Terminado"><button type="button" class="btn btn-outline-warning boton-transparente botonesGral"><span class="glyphicon glyphicon-ok-sign"></span> Órdenes finalizadas</button></a>
<a href="#"><button type="button" class="btn btn-outline-warning boton-transparenteExcel botonesGral "><span class="glyphicon glyphicon-circle-arrow-up"></span> Subir excel</button></a>


<br />
<br />

<h4 style="color: white">Lista general de órdenes</h4>

<hr />


<div class="tablaScroll">
    <table class="table tablas">
        <tr class="bg-info">
            <th>
                Nombre
            </th>
            <th>
                Email
            </th>
            <td>
                <b>Producto</b>
            </td>
            <td>
                <b>Concepto de cobro</b>
            </td>
            <th>
                id Orden
            </th>
            <th>
                Estatus de pago
            </th>
            <th>
                Fecha de creación
            </th>
            <th>
                Total
            </th>
            <th>
                Link de pago
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.customer_info.name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.customer_info.email)
        </td>
        <td>
            @{
                dynamic datosCargo1 = js.Deserialize<dynamic>(item.line_items.data[0].ToString());
                string producto = datosCargo1["name"];
            }
            @producto
        </td>
        <td>
            @{
                var conceptoPago = (from c in checkouts select c).ToArray();

                string concepto = conceptoPago[i].name.ToString();
                i++;
            }
            @concepto
        </td>
        <td>
            <a href="https://admin.conekta.com/orders/@item.id" target="_blank">@item.id</a>
            @*@Html.DisplayFor(modelItem => item.id)*@
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.payment_status)
        </td>
        @{
            double ticks = double.Parse(item.created_at);
            TimeSpan time = TimeSpan.FromSeconds(ticks);
            DateTime startdate = new DateTime(1969, 12, 31, 19, 00, 000) + time;

            dynamic datosCargo2 = js.Deserialize<dynamic>(item.charges.data[0].ToString());
            string id = datosCargo2["id"];
        }
        <td>
            @Html.DisplayFor(modelItem => startdate)
        </td>
        <td>
            @*Html.DisplayFor(modelItem => item.amount / 100)*@

            @{ 
                double total = item.amount / 100;
            }
            $@total
        </td>
        <td>
            @{
                var linkPago = (from c in checkouts select c).ToArray();

                string link = conceptoPago[j].url.ToString();
                j++;
            }
            <a href="@link" target="_blank"><button class="btn btn-warning">Click para link de pago</button> </a>
        </td>
        <td>
            @{
                if (item.payment_status == "paid")
                {
                    <button class="btn btn-info">Asignar</button>
                }
                else
                {
                    <button class="btn btn-default" disabled>Asignar</button>
                }
            }
        </td>

    </tr>
                    }

    </table>
</div>
