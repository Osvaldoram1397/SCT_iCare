
@{
    ViewBag.Title = "TablaDinamica";

    GMIEntities db = new GMIEntities();

    var canales = db.Canales.OrderBy(o => o.NombreCanal);

    int flag = 1;

    int diaCorrienteHeader = 1;
    int diaCorrienteRow = 1;
    int diaCorrienteFooter = 1;

    int metaDiaria = 0;

    int diaMes = DateTime.Today.Day;

    int episTotal = 0;
    int dictamenTotal = 0;

    int episTotalTOTAL = 0;
    int dictamenTotalTOTAL = 0;

    int episTotalFooter = 0;
    int? dictamenTotalFooter = 0;

    int metaMensual = 0;

    foreach(var e in db.Canales)
    {
        metaMensual += Convert.ToInt32(e.Meta);
    }

    int metaDiariaFooter = metaMensual / 30;

    var realizadosCallCenter = db.Cita.Join(db.Captura, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m })
.Where(w => w.M.FinalCaptura != null && w.N.Canal == "Call Center");

    var realizadosALT = db.PacienteESP.Where(w => w.Capturista != null);

    var realizadosALTIS = 0;

    var realizadosGestores = db.Cita.Join(db.Captura, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).Join(db.Referido, o => o.N.ReferidoPor, p => p.Nombre, (o, p) => new { O = o, P = p })
                .Where(w => w.O.M.FinalCaptura != null && w.P.Tipo == "Gestor");

    var realizadosMedia = 0;

    var realizadosCATEM = db.Cita.Join(db.Captura, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).Join(db.Referido, o => o.N.ReferidoPor, p => p.Nombre, (o, p) => new { O = o, P = p })
                .Where(w => w.O.M.FinalCaptura != null && w.P.Tipo.Contains("CATEM"));

    var realizadosEmpresas = db.Cita.Join(db.Captura, n => n.idPaciente, m => m.idPaciente, (n, m) => new { N = n, M = m }).Join(db.Referido, o => o.N.ReferidoPor, p => p.Nombre, (o, p) => new { O = o, P = p })
                .Where(w => w.O.M.FinalCaptura != null && w.P.Tipo == "Empresa");
}
<br />
<h2 style="color:white">Metas Diarias</h2>
<br />

<form class="form-inline" method="post" enctype="multipart/form-data" action="@Url.Content("~/Admin/TablaMetasDiarias")">
    <div>

        <select name="gestor" style="font-size:2vh" class="form-control">
            <option>Seleccionar</option>
            <option value="Diarias">METAS DIARIAS</option>
            <option value="Semanales">METAS SEMANALES</option>
            <option value="Sucursales">SUCURSALES</option>
            <option value="CallCenter">CALL CENTER</option>
            <option value="Gestores">GESTORES</option>
            <option value="Alternativos">ALTERNATIVOS</option>
        </select>
        <input type="month" class="form-control" />
        <input type="submit" class="btn btn-info" value="Enviar" />
    </div>
</form>


<div class="tablaScroll">
    <br />
    <table class="table  table-bordered table-hover tablas" style="color: #2F2D6B">
        <thead>
            <tr @*class="bg-primary" style="border-top-color: black; font-size:smaller"*@>
                <th class="bg-primary" style="border-top-color: black; font-size: smaller; position: sticky; left: 0">
                    <b>CANAL</b>
                </th>
                <th class="bg-primary" style="border-top-color: black; font-size: smaller; text-align: center; position: sticky; left: 77px" colspan="2">
                    TOTAL
                </th>
                <th class="bg-primary" style="border-top-color: black; font-size: smaller; text-align: center; position: sticky; left: 77px" colspan="2">
                    Meta
                </th>


                @{


                    while (diaCorrienteHeader <= diaMes)
                    {
                        DateTime fecha = new DateTime(DateTime.Today.Year, DateTime.Today.Month, diaCorrienteHeader);
                        string fechaString = fecha.ToString("dd-MM-yy");
                        <td class="bg-primary" style="border-top-color: black; font-size: smaller; text-align: center" colspan="2" id="hidden">
                            @fechaString
                        </td>
                        diaCorrienteHeader++;

                    }

                    diaCorrienteHeader = 1;
                }
            </tr>
        </thead>

        <tr @*class="bg-info"*@>

            <th class="bg-info" style="position: sticky; left: 0"></th>

            <th class="bg-info" style="text-align: center; position: sticky; left: 77px">
                Realizados
            </th>
            <th class="bg-info" style="text-align: center; position: sticky; left: 159px">
                Diferencia
            </th>

            <th class="bg-info" style="text-align: center">
                Mensual
            </th>
            <th class="bg-info" style="text-align: center">
                Diaria
            </th>

            @{

                while (diaCorrienteHeader <= diaMes)
                {
                    <td class="bg-info" style="border-left-color: dimgray; border-left-width:1.1px; text-align:center" id="hidden">
                        Realizados
                    </td>
                    <td class="bg-info" style="text-align:center" id="hidden">
                        Diferencia
                    </td>
                    diaCorrienteHeader++;
                }
            }


        </tr>


        @foreach (var item in canales)
        {

            <tr @*style="border-top-color: black; border-top-width:2px"*@>

                <th class="bg-info" style="border-top-color: dimgray; border-top-width: 1.1px; position: sticky; left: 0">
                    <b>@item.NombreCanal</b>
                </th>

                @{

                    while (diaCorrienteRow <= diaMes)
                    {
                        DateTime fecha = new DateTime(DateTime.Today.Year, DateTime.Today.Month, diaCorrienteRow);
                        DateTime fecha1 = new DateTime(DateTime.Today.Year, DateTime.Today.Month, diaCorrienteRow).AddDays(1);

                        int realizadoHoy = 0;
                        int diferenciaHoy = 0;

                        if (item.NombreCanal == "Call Center")
                        {
                            realizadoHoy = realizadosCallCenter.Where(w => w.M.FechaExpdiente >= fecha && w.M.FechaExpdiente < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;

                        }
                        else if (item.NombreCanal == "CATEM")
                        {
                            realizadoHoy = realizadosCATEM.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;

                        }
                        else if (item.NombreCanal == "ALT")
                        {
                            realizadoHoy = realizadosALT.Where(w => w.FechaCaptura >= fecha && w.FechaCaptura < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;

                        }
                        else if (item.NombreCanal == "Gestores")
                        {
                            realizadoHoy = realizadosGestores.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;

                        }
                        else if (item.NombreCanal == "Empresas")
                        {
                            realizadoHoy = realizadosEmpresas.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;

                        }

                        //episTotal += epis;
                        //pausaTotal += pausa;
                        //dictamenTotal += dictamen;
                        diaCorrienteRow++;

                    }

                    episTotalTOTAL += episTotal;
                    dictamenTotalTOTAL += dictamenTotal;

                    <th style="background-color: whitesmoke; border-top-color: dimgray; border-left-width: 1.2px; border-left-color: dimgray; border-top-width: 1.1px; text-align: center; position: sticky; left: 77px">
                        <b>@episTotal</b>
                    </th>
                    <th style="background-color: whitesmoke; border-top-color: dimgray; border-top-width: 1.1px; text-align: center; position: sticky; left: 159px">
                        <b>@dictamenTotal</b>
                    </th>

                    diaCorrienteRow = 1;

                    metaDiaria = Convert.ToInt32(item.Meta) / 30;
                    <th  style="border-top-color: dimgray; border-left-width: 1.2px; border-left-color: dimgray; border-top-width: 1.1px; text-align: center">
                        @item.Meta
                    </th>
                    <th   style="border-top-color: dimgray; border-top-width: 1.1px; text-align: center">
                        @metaDiaria
                    </th>

                    while (diaCorrienteRow <= diaMes)
                    {
                        DateTime fecha = new DateTime(DateTime.Today.Year, DateTime.Today.Month, diaCorrienteRow);
                        DateTime fecha1 = new DateTime(DateTime.Today.Year, DateTime.Today.Month, diaCorrienteRow).AddDays(1);

                        int realizadoHoy = 0;
                        int diferenciaHoy = 0;

                        if (item.NombreCanal == "Call Center")
                        {
                            realizadoHoy = realizadosCallCenter.Where(w => w.M.FechaExpdiente >= fecha && w.M.FechaExpdiente < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;

                        }
                        else if (item.NombreCanal == "CATEM")
                        {
                            realizadoHoy = realizadosCATEM.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;
                        }
                        else if (item.NombreCanal == "ALT")
                        {
                            realizadoHoy = realizadosALT.Where(w => w.FechaCaptura >= fecha && w.FechaCaptura < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;
                        }
                        else if (item.NombreCanal == "Gestores")
                        {
                            realizadoHoy = realizadosGestores.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;
                        }
                        else if (item.NombreCanal == "Empresas")
                        {
                            realizadoHoy = realizadosEmpresas.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                            diferenciaHoy = realizadoHoy - (Convert.ToInt32(item.Meta) / 30);

                            episTotal += realizadoHoy;
                            dictamenTotal += diferenciaHoy;
                        }

                        //episTotal += epis;
                        //pausaTotal += pausa;
                        //dictamenTotal += dictamen;

                        <td style="border-left-color:  dimgray; border-left-width:1.2px;border-top-color:  dimgray; border-top-width:1.1px; text-align: center" id="hidden">
                            @realizadoHoy
                        </td>
                        <td style="border-top-color:  dimgray; border-top-width:1.1px; text-align: center" id="hidden">
                            @diferenciaHoy
                        </td>
                        diaCorrienteRow++;

                    }

                    diaCorrienteRow = 1;
                }

                @{
                    episTotal = 0;
                    dictamenTotal = 0;
                }

            </tr>

            flag += 1;

        }

        <tr>
            <th class="bg-info" style="border-top-color: dimgray; border-top-width: 1.1px; position: sticky; left: 0">
                <b>TOTALES</b>
            </th>
            
            <th style="background-color: whitesmoke; border-top-color: dimgray; border-top-width: 1.1px; text-align: center; border-left-color: dimgray; border-left-width: 1.2px; position: sticky; left: 77px">
                <b>@episTotalTOTAL</b>
            </th>
            <th style="background-color: whitesmoke; border-top-color: dimgray; border-top-width: 1.1px; text-align: center; position: sticky; left: 159px">
                <b>@dictamenTotalTOTAL</b>
            </th>

            <th  style="background-color: whitesmoke; border-top-color: dimgray; border-left-width: 1.2px; border-left-color: dimgray; border-top-width: 1.1px; text-align: center">
                        @metaMensual
                    </th>
                    <th   style="background-color: whitesmoke; border-top-color: dimgray; border-top-width: 1.1px; text-align: center">
                        @metaDiariaFooter
                    </th>

            @{
                foreach (var item in canales)
                {
                    while (diaCorrienteFooter <= diaMes)
                    {
                        DateTime fecha = new DateTime(DateTime.Today.Year, DateTime.Today.Month, diaCorrienteFooter);
                        DateTime fecha1 = new DateTime(DateTime.Today.Year, DateTime.Today.Month, diaCorrienteFooter).AddDays(1);

                        int? realizadoHoy = 0;
                        int? diferenciaHoy = 0;
                        episTotalFooter = 0;
                        dictamenTotalFooter = 0;

                        int? metaCallCenter = 0;
                        int? metaCATEM = 0;
                        int? metaEmpresas = 0;
                        int? metaAlternativos = 0;
                        int? metaGestores = 0;

                        foreach (var meta in canales)
                        {
                            if (meta.NombreCanal == "Call Center")
                            {
                                metaCallCenter = meta.Meta;
                            }
                            else if (meta.NombreCanal == "CATEM")
                            {
                                metaCATEM = meta.Meta;
                            }
                            else if (meta.NombreCanal == "Empresas")
                            {
                                metaEmpresas = meta.Meta;
                            }
                            else if (meta.NombreCanal == "ALT")
                            {
                                metaAlternativos = meta.Meta;
                            }
                            else if (meta.NombreCanal == "Gestores")
                            {
                                metaGestores = meta.Meta;
                            }
                        }

                        episTotalFooter += realizadosCallCenter.Where(w => w.M.FechaExpdiente >= fecha && w.M.FechaExpdiente < fecha1).Count();
                        realizadoHoy = realizadosCallCenter.Where(w => w.M.FechaExpdiente >= fecha && w.M.FechaExpdiente < fecha1).Count();
                        dictamenTotalFooter += (realizadoHoy - (metaCallCenter) / 30);

                        episTotalFooter += realizadosCATEM.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                        realizadoHoy = realizadosCATEM.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                        dictamenTotalFooter += (realizadoHoy - (metaCATEM) / 30);

                        episTotalFooter += realizadosALT.Where(w => w.FechaCaptura >= fecha && w.FechaCaptura < fecha1).Count();
                        realizadoHoy = realizadosALT.Where(w => w.FechaCaptura >= fecha && w.FechaCaptura < fecha1).Count();
                        dictamenTotalFooter += (realizadoHoy - (metaAlternativos) / 30);

                        episTotalFooter += realizadosGestores.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                        realizadoHoy = realizadosGestores.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                        dictamenTotalFooter += (realizadoHoy - (metaGestores) / 30);

                        episTotalFooter += realizadosEmpresas.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                        realizadoHoy = realizadosEmpresas.Where(w => w.O.M.FechaExpdiente >= fecha && w.O.M.FechaExpdiente < fecha1).Count();
                        dictamenTotalFooter += (realizadoHoy - (metaEmpresas) / 30);


                        <td style="border-left-color:  dimgray; border-left-width:1.2px;border-top-color:  dimgray; border-top-width:1.1px; text-align: center; background-color: whitesmoke;" id="hidden">
                            <b>@episTotalFooter</b>
                        </td>
                        <td style="border-top-color:  dimgray; border-top-width:1.1px; text-align: center; background-color: whitesmoke;" id="hidden">
                            <b>@dictamenTotalFooter</b>
                        </td>


                        diaCorrienteFooter++;

                    }
                }
            }

        </tr>

    </table>
</div>